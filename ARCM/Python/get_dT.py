import mindspore.numpy as np
from math import cos, sin

def T(q, dq):
    theta1 = q[0]
    theta2 = q[1]
    theta3 = q[2]
    theta4 = q[3]
    theta5 = q[4]
    theta6 = q[5]
    theta7 = q[6]
    
    dtheta1 = dq[0]
    dtheta2 = dq[1]
    dtheta3 = dq[2]
    dtheta4 = dq[3]
    dtheta5 = dq[4]
    dtheta6 = dq[5]
    dtheta7 = dq[6]
    
    T1 = np.array([
        [cos(theta7)*(sin(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)) - cos(theta6)*(cos(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))) - sin(theta7)*(sin(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))), - cos(theta7)*(sin(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))) - sin(theta7)*(sin(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)) - cos(theta6)*(cos(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))), - cos(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)) - sin(theta6)*(cos(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))), (11*sin(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125 - (79*sin(theta1)*sin(theta2))/250 - (33*cos(theta1)*sin(theta3))/400 + (33*cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)))/400 - (11*cos(theta6)*(cos(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125 + (48*sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)))/125 - (48*cos(theta4)*sin(theta1)*sin(theta2))/125 + (33*sin(theta1)*sin(theta2)*sin(theta4))/400 - (33*cos(theta2)*cos(theta3)*sin(theta1))/400],
        [cos(theta7)*(sin(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)) - cos(theta6)*(cos(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))) - sin(theta7)*(sin(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))), - cos(theta7)*(sin(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))) - sin(theta7)*(sin(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)) - cos(theta6)*(cos(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))), - cos(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)) - sin(theta6)*(cos(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))), (79*cos(theta1)*sin(theta2))/250 - (33*sin(theta1)*sin(theta3))/400 + (11*sin(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125 - (11*cos(theta6)*(cos(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125 + (33*cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)))/400 + (48*sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)))/125 - (33*cos(theta1)*sin(theta2)*sin(theta4))/400 + (33*cos(theta1)*cos(theta2)*cos(theta3))/400 + (48*cos(theta1)*cos(theta4)*sin(theta2))/125],


        ], np.float32)
    
    T2 = np.array([
        [cos(theta7)*(sin(theta6)*(cos(theta1)*cos(theta2)*cos(theta4) + cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4)) + cos(theta6)*(cos(theta5)*(cos(theta1)*cos(theta2)*sin(theta4) - cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) + cos(theta1)*sin(theta2)*sin(theta3)*sin(theta5))) + sin(theta7)*(sin(theta5)*(cos(theta1)*cos(theta2)*sin(theta4) - cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta1)*cos(theta5)*sin(theta2)*sin(theta3)), cos(theta7)*(sin(theta5)*(cos(theta1)*cos(theta2)*sin(theta4) - cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta1)*cos(theta5)*sin(theta2)*sin(theta3)) - sin(theta7)*(sin(theta6)*(cos(theta1)*cos(theta2)*cos(theta4) + cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4)) + cos(theta6)*(cos(theta5)*(cos(theta1)*cos(theta2)*sin(theta4) - cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) + cos(theta1)*sin(theta2)*sin(theta3)*sin(theta5))), sin(theta6)*(cos(theta5)*(cos(theta1)*cos(theta2)*sin(theta4) - cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) + cos(theta1)*sin(theta2)*sin(theta3)*sin(theta5)) - cos(theta6)*(cos(theta1)*cos(theta2)*cos(theta4) + cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4)), (79*cos(theta1)*cos(theta2))/250 + (11*sin(theta6)*(cos(theta1)*cos(theta2)*cos(theta4) + cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4)))/125 + (11*cos(theta6)*(cos(theta5)*(cos(theta1)*cos(theta2)*sin(theta4) - cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) + cos(theta1)*sin(theta2)*sin(theta3)*sin(theta5)))/125 + (48*cos(theta1)*cos(theta2)*cos(theta4))/125 - (33*cos(theta1)*cos(theta3)*sin(theta2))/400 - (33*cos(theta1)*cos(theta2)*sin(theta4))/400 + (33*cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2))/400 + (48*cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4))/125],
        [sin(theta7)*(sin(theta5)*(cos(theta2)*sin(theta1)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2)) - cos(theta5)*sin(theta1)*sin(theta2)*sin(theta3)) + cos(theta7)*(cos(theta6)*(cos(theta5)*(cos(theta2)*sin(theta1)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2)) + sin(theta1)*sin(theta2)*sin(theta3)*sin(theta5)) + sin(theta6)*(cos(theta2)*cos(theta4)*sin(theta1) + cos(theta3)*sin(theta1)*sin(theta2)*sin(theta4))), cos(theta7)*(sin(theta5)*(cos(theta2)*sin(theta1)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2)) - cos(theta5)*sin(theta1)*sin(theta2)*sin(theta3)) - sin(theta7)*(cos(theta6)*(cos(theta5)*(cos(theta2)*sin(theta1)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2)) + sin(theta1)*sin(theta2)*sin(theta3)*sin(theta5)) + sin(theta6)*(cos(theta2)*cos(theta4)*sin(theta1) + cos(theta3)*sin(theta1)*sin(theta2)*sin(theta4))), sin(theta6)*(cos(theta5)*(cos(theta2)*sin(theta1)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2)) + sin(theta1)*sin(theta2)*sin(theta3)*sin(theta5)) - cos(theta6)*(cos(theta2)*cos(theta4)*sin(theta1) + cos(theta3)*sin(theta1)*sin(theta2)*sin(theta4)), (11*cos(theta6)*(cos(theta5)*(cos(theta2)*sin(theta1)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2)) + sin(theta1)*sin(theta2)*sin(theta3)*sin(theta5)))/125 + (79*cos(theta2)*sin(theta1))/250 + (11*sin(theta6)*(cos(theta2)*cos(theta4)*sin(theta1) + cos(theta3)*sin(theta1)*sin(theta2)*sin(theta4)))/125 - (33*cos(theta3)*sin(theta1)*sin(theta2))/400 - (33*cos(theta2)*sin(theta1)*sin(theta4))/400 + (48*cos(theta2)*cos(theta4)*sin(theta1))/125 + (33*cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2))/400 + (48*cos(theta3)*sin(theta1)*sin(theta2)*sin(theta4))/125],
        [- sin(theta7)*(sin(theta5)*(sin(theta2)*sin(theta4) + cos(theta2)*cos(theta3)*cos(theta4)) + cos(theta2)*cos(theta5)*sin(theta3)) - cos(theta7)*(cos(theta6)*(cos(theta5)*(sin(theta2)*sin(theta4) + cos(theta2)*cos(theta3)*cos(theta4)) - cos(theta2)*sin(theta3)*sin(theta5)) + sin(theta6)*(cos(theta4)*sin(theta2) - cos(theta2)*cos(theta3)*sin(theta4))),                                                                                                 sin(theta7)*(cos(theta6)*(cos(theta5)*(sin(theta2)*sin(theta4) + cos(theta2)*cos(theta3)*cos(theta4)) - cos(theta2)*sin(theta3)*sin(theta5)) + sin(theta6)*(cos(theta4)*sin(theta2) - cos(theta2)*cos(theta3)*sin(theta4))) - cos(theta7)*(sin(theta5)*(sin(theta2)*sin(theta4) + cos(theta2)*cos(theta3)*cos(theta4)) + cos(theta2)*cos(theta5)*sin(theta3)),                                                             cos(theta6)*(cos(theta4)*sin(theta2) - cos(theta2)*cos(theta3)*sin(theta4)) - sin(theta6)*(cos(theta5)*(sin(theta2)*sin(theta4) + cos(theta2)*cos(theta3)*cos(theta4)) - cos(theta2)*sin(theta3)*sin(theta5)),                                                                                                                                     (33*sin(theta2)*sin(theta4))/400 - (33*cos(theta2)*cos(theta3))/400 - (48*cos(theta4)*sin(theta2))/125 - (79*sin(theta2))/250 - (11*cos(theta6)*(cos(theta5)*(sin(theta2)*sin(theta4) + cos(theta2)*cos(theta3)*cos(theta4)) - cos(theta2)*sin(theta3)*sin(theta5)))/125 - (11*sin(theta6)*(cos(theta4)*sin(theta2) - cos(theta2)*cos(theta3)*sin(theta4)))/125 + (33*cos(theta2)*cos(theta3)*cos(theta4))/400 + (48*cos(theta2)*cos(theta3)*sin(theta4))/125],

        ], np.float32)
    
    T3 = np.array([
        [cos(theta7)*(cos(theta6)*(sin(theta5)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta4)*cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))) + sin(theta4)*sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))) - sin(theta7)*(cos(theta5)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta4)*sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))), - sin(theta7)*(cos(theta6)*(sin(theta5)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta4)*cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))) + sin(theta4)*sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))) - cos(theta7)*(cos(theta5)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta4)*sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))), sin(theta6)*(sin(theta5)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta4)*cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))) - cos(theta6)*sin(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)), (33*cos(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/400 - (33*cos(theta3)*sin(theta1))/400 + (48*sin(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/125 + (11*cos(theta6)*(sin(theta5)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta4)*cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125 + (11*sin(theta4)*sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/125 - (33*cos(theta1)*cos(theta2)*sin(theta3))/400],
        [sin(theta7)*(cos(theta5)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + cos(theta4)*sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))) - cos(theta7)*(cos(theta6)*(sin(theta5)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))) + sin(theta4)*sin(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))),   sin(theta7)*(cos(theta6)*(sin(theta5)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))) + sin(theta4)*sin(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))) + cos(theta7)*(cos(theta5)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + cos(theta4)*sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))), cos(theta6)*sin(theta4)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)) - sin(theta6)*(sin(theta5)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))), (33*cos(theta1)*cos(theta3))/400 - (33*cos(theta4)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/400 - (48*sin(theta4)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/125 - (11*cos(theta6)*(sin(theta5)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125 - (33*cos(theta2)*sin(theta1)*sin(theta3))/400 - (11*sin(theta4)*sin(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/125],
        [cos(theta7)*(cos(theta6)*(cos(theta3)*sin(theta2)*sin(theta5) + cos(theta4)*cos(theta5)*sin(theta2)*sin(theta3)) - sin(theta2)*sin(theta3)*sin(theta4)*sin(theta6)) - sin(theta7)*(cos(theta3)*cos(theta5)*sin(theta2) - cos(theta4)*sin(theta2)*sin(theta3)*sin(theta5)),                                                                                                                                                                                                         - sin(theta7)*(cos(theta6)*(cos(theta3)*sin(theta2)*sin(theta5) + cos(theta4)*cos(theta5)*sin(theta2)*sin(theta3)) - sin(theta2)*sin(theta3)*sin(theta4)*sin(theta6)) - cos(theta7)*(cos(theta3)*cos(theta5)*sin(theta2) - cos(theta4)*sin(theta2)*sin(theta3)*sin(theta5)),                                                                                                                         sin(theta6)*(cos(theta3)*sin(theta2)*sin(theta5) + cos(theta4)*cos(theta5)*sin(theta2)*sin(theta3)) + cos(theta6)*sin(theta2)*sin(theta3)*sin(theta4),                                                                                                                                                                                                                                                        (33*sin(theta2)*sin(theta3))/400 + (11*cos(theta6)*(cos(theta3)*sin(theta2)*sin(theta5) + cos(theta4)*cos(theta5)*sin(theta2)*sin(theta3)))/125 - (33*cos(theta4)*sin(theta2)*sin(theta3))/400 - (48*sin(theta2)*sin(theta3)*sin(theta4))/125 - (11*sin(theta2)*sin(theta3)*sin(theta4)*sin(theta6))/125],
        [0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   0,                                                                                                                                                                                                                                                                             0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               0]
        ], np.float32)
    
    T4 = np.array([
        [cos(theta7)*(sin(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + cos(theta5)*cos(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2))) + sin(theta5)*sin(theta7)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)), cos(theta7)*sin(theta5)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)) - sin(theta7)*(sin(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + cos(theta5)*cos(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2))), cos(theta5)*sin(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)) - cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)), (11*sin(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)))/125 + (48*cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)))/125 - (33*sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)))/400 - (48*cos(theta1)*sin(theta2)*sin(theta4))/125 + (11*cos(theta5)*cos(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125 - (33*cos(theta1)*cos(theta4)*sin(theta2))/400],
        [- cos(theta7)*(sin(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + cos(theta5)*cos(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2))) - sin(theta5)*sin(theta7)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)), sin(theta7)*(sin(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + cos(theta5)*cos(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2))) - cos(theta7)*sin(theta5)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)), cos(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*sin(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)), (33*sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)))/400 - (48*cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)))/125 - (11*sin(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)))/125 - (33*cos(theta4)*sin(theta1)*sin(theta2))/400 - (48*sin(theta1)*sin(theta2)*sin(theta4))/125 - (11*cos(theta5)*cos(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125],
        [sin(theta5)*sin(theta7)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4)) - cos(theta7)*(sin(theta6)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta5)*cos(theta6)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4))),                                                                                                                                                             sin(theta7)*(sin(theta6)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta5)*cos(theta6)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4))) + cos(theta7)*sin(theta5)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4)),                                                                                                         cos(theta6)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) + cos(theta5)*sin(theta6)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4)),                                                                                                                                                                                                                 (11*cos(theta5)*cos(theta6)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4)))/125 - (48*cos(theta2)*sin(theta4))/125 - (11*sin(theta6)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)))/125 - (33*cos(theta3)*sin(theta2)*sin(theta4))/400 - (33*cos(theta2)*cos(theta4))/400 + (48*cos(theta3)*cos(theta4)*sin(theta2))/125],

        ], np.float32)
    
    T5 = np.array([
        [cos(theta6)*cos(theta7)*(sin(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))) - sin(theta7)*(cos(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))), - cos(theta7)*(cos(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))) - cos(theta6)*sin(theta7)*(sin(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))),  sin(theta6)*(sin(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))),  (11*cos(theta6)*(sin(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125],
        [sin(theta7)*(cos(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))) - cos(theta6)*cos(theta7)*(sin(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))),   cos(theta7)*(cos(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))) + cos(theta6)*sin(theta7)*(sin(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))), -sin(theta6)*(sin(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))), -(11*cos(theta6)*(sin(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125],
        [sin(theta7)*(cos(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) + sin(theta2)*sin(theta3)*sin(theta5)) - cos(theta6)*cos(theta7)*(sin(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta5)*sin(theta2)*sin(theta3)),                                                                                                                                                                                           cos(theta7)*(cos(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) + sin(theta2)*sin(theta3)*sin(theta5)) + cos(theta6)*sin(theta7)*(sin(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta5)*sin(theta2)*sin(theta3)),                                                                                             -sin(theta6)*(sin(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta5)*sin(theta2)*sin(theta3)),                                                                                             -(11*cos(theta6)*(sin(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta5)*sin(theta2)*sin(theta3)))/125],

        ], np.float32)
    
    T6 = np.array([
        [cos(theta7)*(cos(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)) + sin(theta6)*(cos(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))), -sin(theta7)*(cos(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)) + sin(theta6)*(cos(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))), sin(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)) - cos(theta6)*(cos(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))),   (11*cos(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125 + (11*sin(theta6)*(cos(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125],
        [-cos(theta7)*(cos(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)) + sin(theta6)*(cos(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))),  sin(theta7)*(cos(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)) + sin(theta6)*(cos(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))), cos(theta6)*(cos(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))) - sin(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)), - (11*cos(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125 - (11*sin(theta6)*(cos(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125],
        [-cos(theta7)*(sin(theta6)*(cos(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) + sin(theta2)*sin(theta3)*sin(theta5)) - cos(theta6)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4))),                                                                                                                                                  sin(theta7)*(sin(theta6)*(cos(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) + sin(theta2)*sin(theta3)*sin(theta5)) - cos(theta6)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4))),                                                                                                                                                 cos(theta6)*(cos(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) + sin(theta2)*sin(theta3)*sin(theta5)) + sin(theta6)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4)),                                                                                                                                                   (11*cos(theta6)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4)))/125 - (11*sin(theta6)*(cos(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) + sin(theta2)*sin(theta3)*sin(theta5)))/125],

        ], np.float32)
    
    T7 = np.array([
        [- cos(theta7)*(sin(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))) - sin(theta7)*(sin(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)) - cos(theta6)*(cos(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))), sin(theta7)*(sin(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))) - cos(theta7)*(sin(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)) - cos(theta6)*(cos(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))), 0, 0],
        [cos(theta7)*(sin(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))) + sin(theta7)*(sin(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)) - cos(theta6)*(cos(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))), cos(theta7)*(sin(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)) - cos(theta6)*(cos(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))) - sin(theta7)*(sin(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))), 0, 0],
        [cos(theta7)*(sin(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta5)*sin(theta2)*sin(theta3)) - sin(theta7)*(cos(theta6)*(cos(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) + sin(theta2)*sin(theta3)*sin(theta5)) + sin(theta6)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4))),                                                                                                                                                                                                                                           - sin(theta7)*(sin(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta5)*sin(theta2)*sin(theta3)) - cos(theta7)*(cos(theta6)*(cos(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) + sin(theta2)*sin(theta3)*sin(theta5)) + sin(theta6)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4))), 0, 0],

        ], np.float32)
    
    dT = T1 * dtheta1 + T2 * dtheta2 + T3 * dtheta3 + T4 * dtheta4 + T5 * dtheta5 + T6 * dtheta6 + T7 * dtheta7
    
    return dT