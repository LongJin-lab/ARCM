import mindspore.numpy as np
from math import cos, sin
from mindspore import Tensor
from mindspore.ops import operations as P

def A(q, dq):
    theta1 = q[0]
    theta2 = q[1]
    theta3 = q[2]
    theta4 = q[3]
    theta5 = q[4]
    theta6 = q[5]
    theta7 = q[6]
    
    dtheta1 = dq[0]
    dtheta2 = dq[1]
    dtheta3 = dq[2]
    dtheta4 = dq[3]
    dtheta5 = dq[4]
    dtheta6 = dq[5]
    dtheta7 = dq[6]
    
    Jtheta1 = ([
        [(33*sin(theta1)*sin(theta3))/400 - (79*cos(theta1)*sin(theta2))/250 + (51*cos(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125 - (11*sin(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125 + (11*cos(theta6)*(cos(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125 - (33*cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)))/400 + (51*sin(theta6)*(cos(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125 - (48*sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)))/125 + (33*cos(theta1)*sin(theta2)*sin(theta4))/400 - (33*cos(theta1)*cos(theta2)*cos(theta3))/400 - (48*cos(theta1)*cos(theta4)*sin(theta2))/125, (51*cos(theta6)*(cos(theta2)*cos(theta4)*sin(theta1) + cos(theta3)*sin(theta1)*sin(theta2)*sin(theta4)))/125 - (79*cos(theta2)*sin(theta1))/250 - (51*sin(theta6)*(cos(theta5)*(cos(theta2)*sin(theta1)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2)) + sin(theta1)*sin(theta2)*sin(theta3)*sin(theta5)))/125 - (11*cos(theta6)*(cos(theta5)*(cos(theta2)*sin(theta1)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2)) + sin(theta1)*sin(theta2)*sin(theta3)*sin(theta5)))/125 - (11*sin(theta6)*(cos(theta2)*cos(theta4)*sin(theta1) + cos(theta3)*sin(theta1)*sin(theta2)*sin(theta4)))/125 + (33*cos(theta3)*sin(theta1)*sin(theta2))/400 + (33*cos(theta2)*sin(theta1)*sin(theta4))/400 - (48*cos(theta2)*cos(theta4)*sin(theta1))/125 - (33*cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2))/400 - (48*cos(theta3)*sin(theta1)*sin(theta2)*sin(theta4))/125, (33*cos(theta4)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/400 - (33*cos(theta1)*cos(theta3))/400 + (48*sin(theta4)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/125 + (11*cos(theta6)*(sin(theta5)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125 + (51*sin(theta6)*(sin(theta5)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125 + (33*cos(theta2)*sin(theta1)*sin(theta3))/400 - (51*cos(theta6)*sin(theta4)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/125 + (11*sin(theta4)*sin(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/125, (11*sin(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)))/125 - (51*cos(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)))/125 + (48*cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)))/125 - (33*sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)))/400 + (33*cos(theta4)*sin(theta1)*sin(theta2))/400 + (48*sin(theta1)*sin(theta2)*sin(theta4))/125 + (11*cos(theta5)*cos(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125 + (51*cos(theta5)*sin(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125, (11*cos(theta6)*(sin(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125 + (51*sin(theta6)*(sin(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125, (11*cos(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125 + (51*sin(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125 - (51*cos(theta6)*(cos(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125 + (11*sin(theta6)*(cos(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125, 0],
        [(11*sin(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125 - (79*sin(theta1)*sin(theta2))/250 - (51*cos(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125 - (33*cos(theta1)*sin(theta3))/400 + (33*cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)))/400 - (11*cos(theta6)*(cos(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125 + (48*sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)))/125 - (51*sin(theta6)*(cos(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125 - (48*cos(theta4)*sin(theta1)*sin(theta2))/125 + (33*sin(theta1)*sin(theta2)*sin(theta4))/400 - (33*cos(theta2)*cos(theta3)*sin(theta1))/400, (79*cos(theta1)*cos(theta2))/250 - (51*cos(theta6)*(cos(theta1)*cos(theta2)*cos(theta4) + cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4)))/125 + (11*sin(theta6)*(cos(theta1)*cos(theta2)*cos(theta4) + cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4)))/125 + (11*cos(theta6)*(cos(theta5)*(cos(theta1)*cos(theta2)*sin(theta4) - cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) + cos(theta1)*sin(theta2)*sin(theta3)*sin(theta5)))/125 + (51*sin(theta6)*(cos(theta5)*(cos(theta1)*cos(theta2)*sin(theta4) - cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) + cos(theta1)*sin(theta2)*sin(theta3)*sin(theta5)))/125 + (48*cos(theta1)*cos(theta2)*cos(theta4))/125 - (33*cos(theta1)*cos(theta3)*sin(theta2))/400 - (33*cos(theta1)*cos(theta2)*sin(theta4))/400 + (33*cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2))/400 + (48*cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4))/125, (33*cos(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/400 - (33*cos(theta3)*sin(theta1))/400 + (48*sin(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/125 + (11*cos(theta6)*(sin(theta5)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta4)*cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125 + (51*sin(theta6)*(sin(theta5)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta4)*cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125 - (51*cos(theta6)*sin(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/125 + (11*sin(theta4)*sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/125 - (33*cos(theta1)*cos(theta2)*sin(theta3))/400, (11*sin(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)))/125 - (51*cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)))/125 + (48*cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)))/125 - (33*sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)))/400 - (48*cos(theta1)*sin(theta2)*sin(theta4))/125 + (11*cos(theta5)*cos(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125 + (51*cos(theta5)*sin(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125 - (33*cos(theta1)*cos(theta4)*sin(theta2))/400, (11*cos(theta6)*(sin(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125 + (51*sin(theta6)*(sin(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125, (11*cos(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125 + (51*sin(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125 - (51*cos(theta6)*(cos(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125 + (11*sin(theta6)*(cos(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125, 0],
        [0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                           0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 0, 0]
        ], np.float32)
    
    Jtheta2 = np.array([
        [(51*cos(theta6)*(cos(theta2)*cos(theta4)*sin(theta1) + cos(theta3)*sin(theta1)*sin(theta2)*sin(theta4)))/125 - (79*cos(theta2)*sin(theta1))/250 - (51*sin(theta6)*(cos(theta5)*(cos(theta2)*sin(theta1)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2)) + sin(theta1)*sin(theta2)*sin(theta3)*sin(theta5)))/125 - (11*cos(theta6)*(cos(theta5)*(cos(theta2)*sin(theta1)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2)) + sin(theta1)*sin(theta2)*sin(theta3)*sin(theta5)))/125 - (11*sin(theta6)*(cos(theta2)*cos(theta4)*sin(theta1) + cos(theta3)*sin(theta1)*sin(theta2)*sin(theta4)))/125 + (33*cos(theta3)*sin(theta1)*sin(theta2))/400 + (33*cos(theta2)*sin(theta1)*sin(theta4))/400 - (48*cos(theta2)*cos(theta4)*sin(theta1))/125 - (33*cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2))/400 - (48*cos(theta3)*sin(theta1)*sin(theta2)*sin(theta4))/125, (51*cos(theta6)*(cos(theta1)*cos(theta4)*sin(theta2) - cos(theta1)*cos(theta2)*cos(theta3)*sin(theta4)))/125 - (79*cos(theta1)*sin(theta2))/250 - (11*sin(theta6)*(cos(theta1)*cos(theta4)*sin(theta2) - cos(theta1)*cos(theta2)*cos(theta3)*sin(theta4)))/125 - (11*cos(theta6)*(cos(theta5)*(cos(theta1)*sin(theta2)*sin(theta4) + cos(theta1)*cos(theta2)*cos(theta3)*cos(theta4)) - cos(theta1)*cos(theta2)*sin(theta3)*sin(theta5)))/125 - (51*sin(theta6)*(cos(theta5)*(cos(theta1)*sin(theta2)*sin(theta4) + cos(theta1)*cos(theta2)*cos(theta3)*cos(theta4)) - cos(theta1)*cos(theta2)*sin(theta3)*sin(theta5)))/125 + (33*cos(theta1)*sin(theta2)*sin(theta4))/400 - (33*cos(theta1)*cos(theta2)*cos(theta3))/400 - (48*cos(theta1)*cos(theta4)*sin(theta2))/125 + (33*cos(theta1)*cos(theta2)*cos(theta3)*cos(theta4))/400 + (48*cos(theta1)*cos(theta2)*cos(theta3)*sin(theta4))/125, (11*cos(theta6)*(cos(theta1)*cos(theta3)*sin(theta2)*sin(theta5) + cos(theta1)*cos(theta4)*cos(theta5)*sin(theta2)*sin(theta3)))/125 + (51*sin(theta6)*(cos(theta1)*cos(theta3)*sin(theta2)*sin(theta5) + cos(theta1)*cos(theta4)*cos(theta5)*sin(theta2)*sin(theta3)))/125 + (33*cos(theta1)*sin(theta2)*sin(theta3))/400 - (33*cos(theta1)*cos(theta4)*sin(theta2)*sin(theta3))/400 - (48*cos(theta1)*sin(theta2)*sin(theta3)*sin(theta4))/125 + (51*cos(theta1)*cos(theta6)*sin(theta2)*sin(theta3)*sin(theta4))/125 - (11*cos(theta1)*sin(theta2)*sin(theta3)*sin(theta4)*sin(theta6))/125, (51*cos(theta6)*(cos(theta1)*cos(theta2)*sin(theta4) - cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)))/125 - (11*sin(theta6)*(cos(theta1)*cos(theta2)*sin(theta4) - cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)))/125 + (11*cos(theta5)*cos(theta6)*(cos(theta1)*cos(theta2)*cos(theta4) + cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4)))/125 + (51*cos(theta5)*sin(theta6)*(cos(theta1)*cos(theta2)*cos(theta4) + cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4)))/125 - (33*cos(theta1)*cos(theta2)*cos(theta4))/400 - (48*cos(theta1)*cos(theta2)*sin(theta4))/125 + (48*cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2))/125 - (33*cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4))/400, - (11*cos(theta6)*(sin(theta5)*(cos(theta1)*cos(theta2)*sin(theta4) - cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta1)*cos(theta5)*sin(theta2)*sin(theta3)))/125 - (51*sin(theta6)*(sin(theta5)*(cos(theta1)*cos(theta2)*sin(theta4) - cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta1)*cos(theta5)*sin(theta2)*sin(theta3)))/125, (11*cos(theta6)*(cos(theta1)*cos(theta2)*cos(theta4) + cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4)))/125 + (51*sin(theta6)*(cos(theta1)*cos(theta2)*cos(theta4) + cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4)))/125 + (51*cos(theta6)*(cos(theta5)*(cos(theta1)*cos(theta2)*sin(theta4) - cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) + cos(theta1)*sin(theta2)*sin(theta3)*sin(theta5)))/125 - (11*sin(theta6)*(cos(theta5)*(cos(theta1)*cos(theta2)*sin(theta4) - cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) + cos(theta1)*sin(theta2)*sin(theta3)*sin(theta5)))/125, 0],
        [(79*cos(theta1)*cos(theta2))/250 - (51*cos(theta6)*(cos(theta1)*cos(theta2)*cos(theta4) + cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4)))/125 + (11*sin(theta6)*(cos(theta1)*cos(theta2)*cos(theta4) + cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4)))/125 + (11*cos(theta6)*(cos(theta5)*(cos(theta1)*cos(theta2)*sin(theta4) - cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) + cos(theta1)*sin(theta2)*sin(theta3)*sin(theta5)))/125 + (51*sin(theta6)*(cos(theta5)*(cos(theta1)*cos(theta2)*sin(theta4) - cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) + cos(theta1)*sin(theta2)*sin(theta3)*sin(theta5)))/125 + (48*cos(theta1)*cos(theta2)*cos(theta4))/125 - (33*cos(theta1)*cos(theta3)*sin(theta2))/400 - (33*cos(theta1)*cos(theta2)*sin(theta4))/400 + (33*cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2))/400 + (48*cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4))/125, (51*cos(theta6)*(cos(theta4)*sin(theta1)*sin(theta2) - cos(theta2)*cos(theta3)*sin(theta1)*sin(theta4)))/125 - (51*sin(theta6)*(cos(theta5)*(sin(theta1)*sin(theta2)*sin(theta4) + cos(theta2)*cos(theta3)*cos(theta4)*sin(theta1)) - cos(theta2)*sin(theta1)*sin(theta3)*sin(theta5)))/125 - (79*sin(theta1)*sin(theta2))/250 - (11*cos(theta6)*(cos(theta5)*(sin(theta1)*sin(theta2)*sin(theta4) + cos(theta2)*cos(theta3)*cos(theta4)*sin(theta1)) - cos(theta2)*sin(theta1)*sin(theta3)*sin(theta5)))/125 - (11*sin(theta6)*(cos(theta4)*sin(theta1)*sin(theta2) - cos(theta2)*cos(theta3)*sin(theta1)*sin(theta4)))/125 - (48*cos(theta4)*sin(theta1)*sin(theta2))/125 + (33*sin(theta1)*sin(theta2)*sin(theta4))/400 - (33*cos(theta2)*cos(theta3)*sin(theta1))/400 + (33*cos(theta2)*cos(theta3)*cos(theta4)*sin(theta1))/400 + (48*cos(theta2)*cos(theta3)*sin(theta1)*sin(theta4))/125, (11*cos(theta6)*(cos(theta3)*sin(theta1)*sin(theta2)*sin(theta5) + cos(theta4)*cos(theta5)*sin(theta1)*sin(theta2)*sin(theta3)))/125 + (51*sin(theta6)*(cos(theta3)*sin(theta1)*sin(theta2)*sin(theta5) + cos(theta4)*cos(theta5)*sin(theta1)*sin(theta2)*sin(theta3)))/125 + (33*sin(theta1)*sin(theta2)*sin(theta3))/400 - (33*cos(theta4)*sin(theta1)*sin(theta2)*sin(theta3))/400 - (48*sin(theta1)*sin(theta2)*sin(theta3)*sin(theta4))/125 + (51*cos(theta6)*sin(theta1)*sin(theta2)*sin(theta3)*sin(theta4))/125 - (11*sin(theta1)*sin(theta2)*sin(theta3)*sin(theta4)*sin(theta6))/125, (51*cos(theta6)*(cos(theta2)*sin(theta1)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2)))/125 - (11*sin(theta6)*(cos(theta2)*sin(theta1)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2)))/125 - (48*cos(theta2)*sin(theta1)*sin(theta4))/125 + (11*cos(theta5)*cos(theta6)*(cos(theta2)*cos(theta4)*sin(theta1) + cos(theta3)*sin(theta1)*sin(theta2)*sin(theta4)))/125 + (51*cos(theta5)*sin(theta6)*(cos(theta2)*cos(theta4)*sin(theta1) + cos(theta3)*sin(theta1)*sin(theta2)*sin(theta4)))/125 - (33*cos(theta2)*cos(theta4)*sin(theta1))/400 + (48*cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2))/125 - (33*cos(theta3)*sin(theta1)*sin(theta2)*sin(theta4))/400, - (11*cos(theta6)*(sin(theta5)*(cos(theta2)*sin(theta1)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2)) - cos(theta5)*sin(theta1)*sin(theta2)*sin(theta3)))/125 - (51*sin(theta6)*(sin(theta5)*(cos(theta2)*sin(theta1)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2)) - cos(theta5)*sin(theta1)*sin(theta2)*sin(theta3)))/125, (51*cos(theta6)*(cos(theta5)*(cos(theta2)*sin(theta1)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2)) + sin(theta1)*sin(theta2)*sin(theta3)*sin(theta5)))/125 - (11*sin(theta6)*(cos(theta5)*(cos(theta2)*sin(theta1)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2)) + sin(theta1)*sin(theta2)*sin(theta3)*sin(theta5)))/125 + (11*cos(theta6)*(cos(theta2)*cos(theta4)*sin(theta1) + cos(theta3)*sin(theta1)*sin(theta2)*sin(theta4)))/125 + (51*sin(theta6)*(cos(theta2)*cos(theta4)*sin(theta1) + cos(theta3)*sin(theta1)*sin(theta2)*sin(theta4)))/125, 0],
        [0,                                                                                                                                                                                                 (33*cos(theta3)*sin(theta2))/400 - (48*cos(theta2)*cos(theta4))/125 - (79*cos(theta2))/250 + (33*cos(theta2)*sin(theta4))/400 - (11*cos(theta6)*(cos(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) + sin(theta2)*sin(theta3)*sin(theta5)))/125 - (51*sin(theta6)*(cos(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) + sin(theta2)*sin(theta3)*sin(theta5)))/125 + (51*cos(theta6)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4)))/125 - (11*sin(theta6)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4)))/125 - (48*cos(theta3)*sin(theta2)*sin(theta4))/125 - (33*cos(theta3)*cos(theta4)*sin(theta2))/400,                                                                                                             (33*cos(theta2)*sin(theta3))/400 + (11*cos(theta6)*(cos(theta2)*cos(theta3)*sin(theta5) + cos(theta2)*cos(theta4)*cos(theta5)*sin(theta3)))/125 + (51*sin(theta6)*(cos(theta2)*cos(theta3)*sin(theta5) + cos(theta2)*cos(theta4)*cos(theta5)*sin(theta3)))/125 - (48*cos(theta2)*sin(theta3)*sin(theta4))/125 - (33*cos(theta2)*cos(theta4)*sin(theta3))/400 + (51*cos(theta2)*cos(theta6)*sin(theta3)*sin(theta4))/125 - (11*cos(theta2)*sin(theta3)*sin(theta4)*sin(theta6))/125,                                                                                                                                                 (33*cos(theta4)*sin(theta2))/400 + (48*sin(theta2)*sin(theta4))/125 - (51*cos(theta6)*(sin(theta2)*sin(theta4) + cos(theta2)*cos(theta3)*cos(theta4)))/125 + (11*sin(theta6)*(sin(theta2)*sin(theta4) + cos(theta2)*cos(theta3)*cos(theta4)))/125 - (11*cos(theta5)*cos(theta6)*(cos(theta4)*sin(theta2) - cos(theta2)*cos(theta3)*sin(theta4)))/125 - (51*cos(theta5)*sin(theta6)*(cos(theta4)*sin(theta2) - cos(theta2)*cos(theta3)*sin(theta4)))/125 + (48*cos(theta2)*cos(theta3)*cos(theta4))/125 - (33*cos(theta2)*cos(theta3)*sin(theta4))/400,                                                                           (11*cos(theta6)*(sin(theta5)*(sin(theta2)*sin(theta4) + cos(theta2)*cos(theta3)*cos(theta4)) + cos(theta2)*cos(theta5)*sin(theta3)))/125 + (51*sin(theta6)*(sin(theta5)*(sin(theta2)*sin(theta4) + cos(theta2)*cos(theta3)*cos(theta4)) + cos(theta2)*cos(theta5)*sin(theta3)))/125,                                                                                                                         (11*sin(theta6)*(cos(theta5)*(sin(theta2)*sin(theta4) + cos(theta2)*cos(theta3)*cos(theta4)) - cos(theta2)*sin(theta3)*sin(theta5)))/125 - (51*cos(theta6)*(cos(theta5)*(sin(theta2)*sin(theta4) + cos(theta2)*cos(theta3)*cos(theta4)) - cos(theta2)*sin(theta3)*sin(theta5)))/125 - (11*cos(theta6)*(cos(theta4)*sin(theta2) - cos(theta2)*cos(theta3)*sin(theta4)))/125 - (51*sin(theta6)*(cos(theta4)*sin(theta2) - cos(theta2)*cos(theta3)*sin(theta4)))/125, 0]
        ], np.float32)
    
    Jtheta3 = np.array([
        [(33*cos(theta4)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/400 - (33*cos(theta1)*cos(theta3))/400 + (48*sin(theta4)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/125 + (11*cos(theta6)*(sin(theta5)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125 + (51*sin(theta6)*(sin(theta5)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125 + (33*cos(theta2)*sin(theta1)*sin(theta3))/400 - (51*cos(theta6)*sin(theta4)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/125 + (11*sin(theta4)*sin(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/125, (11*cos(theta6)*(cos(theta1)*cos(theta3)*sin(theta2)*sin(theta5) + cos(theta1)*cos(theta4)*cos(theta5)*sin(theta2)*sin(theta3)))/125 + (51*sin(theta6)*(cos(theta1)*cos(theta3)*sin(theta2)*sin(theta5) + cos(theta1)*cos(theta4)*cos(theta5)*sin(theta2)*sin(theta3)))/125 + (33*cos(theta1)*sin(theta2)*sin(theta3))/400 - (33*cos(theta1)*cos(theta4)*sin(theta2)*sin(theta3))/400 - (48*cos(theta1)*sin(theta2)*sin(theta3)*sin(theta4))/125 + (51*cos(theta1)*cos(theta6)*sin(theta2)*sin(theta3)*sin(theta4))/125 - (11*cos(theta1)*sin(theta2)*sin(theta3)*sin(theta4)*sin(theta6))/125, (33*sin(theta1)*sin(theta3))/400 - (33*cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)))/400 - (48*sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)))/125 + (11*cos(theta6)*(sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)) + cos(theta4)*cos(theta5)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3))))/125 + (51*sin(theta6)*(sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)) + cos(theta4)*cos(theta5)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3))))/125 + (51*cos(theta6)*sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)))/125 - (11*sin(theta4)*sin(theta6)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)))/125 - (33*cos(theta1)*cos(theta2)*cos(theta3))/400, (48*cos(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/125 - (33*sin(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/400 - (51*cos(theta4)*cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/125 + (11*cos(theta4)*sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/125 + (11*cos(theta5)*cos(theta6)*sin(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/125 + (51*cos(theta5)*sin(theta4)*sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/125,   (11*cos(theta6)*(cos(theta5)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta4)*sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125 + (51*sin(theta6)*(cos(theta5)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta4)*sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125, (51*cos(theta6)*(sin(theta5)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta4)*cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125 - (11*sin(theta6)*(sin(theta5)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta4)*cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125 + (11*cos(theta6)*sin(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/125 + (51*sin(theta4)*sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/125, 0],
        [(33*cos(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/400 - (33*cos(theta3)*sin(theta1))/400 + (48*sin(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/125 + (11*cos(theta6)*(sin(theta5)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta4)*cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125 + (51*sin(theta6)*(sin(theta5)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta4)*cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125 - (51*cos(theta6)*sin(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/125 + (11*sin(theta4)*sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/125 - (33*cos(theta1)*cos(theta2)*sin(theta3))/400, (11*cos(theta6)*(cos(theta3)*sin(theta1)*sin(theta2)*sin(theta5) + cos(theta4)*cos(theta5)*sin(theta1)*sin(theta2)*sin(theta3)))/125 + (51*sin(theta6)*(cos(theta3)*sin(theta1)*sin(theta2)*sin(theta5) + cos(theta4)*cos(theta5)*sin(theta1)*sin(theta2)*sin(theta3)))/125 + (33*sin(theta1)*sin(theta2)*sin(theta3))/400 - (33*cos(theta4)*sin(theta1)*sin(theta2)*sin(theta3))/400 - (48*sin(theta1)*sin(theta2)*sin(theta3)*sin(theta4))/125 + (51*cos(theta6)*sin(theta1)*sin(theta2)*sin(theta3)*sin(theta4))/125 - (11*sin(theta1)*sin(theta2)*sin(theta3)*sin(theta4)*sin(theta6))/125, (33*cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)))/400 - (33*cos(theta1)*sin(theta3))/400 + (48*sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)))/125 - (11*cos(theta6)*(sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)) + cos(theta4)*cos(theta5)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1))))/125 - (51*sin(theta6)*(sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)) + cos(theta4)*cos(theta5)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1))))/125 - (51*cos(theta6)*sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)))/125 + (11*sin(theta4)*sin(theta6)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)))/125 - (33*cos(theta2)*cos(theta3)*sin(theta1))/400, (33*sin(theta4)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/400 - (48*cos(theta4)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/125 + (51*cos(theta4)*cos(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/125 - (11*cos(theta4)*sin(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/125 - (11*cos(theta5)*cos(theta6)*sin(theta4)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/125 - (51*cos(theta5)*sin(theta4)*sin(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/125, - (11*cos(theta6)*(cos(theta5)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + cos(theta4)*sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125 - (51*sin(theta6)*(cos(theta5)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + cos(theta4)*sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125, (11*sin(theta6)*(sin(theta5)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125 - (51*cos(theta6)*(sin(theta5)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125 - (11*cos(theta6)*sin(theta4)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/125 - (51*sin(theta4)*sin(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/125, 0],
        [0,                                                                                                             (33*cos(theta2)*sin(theta3))/400 + (11*cos(theta6)*(cos(theta2)*cos(theta3)*sin(theta5) + cos(theta2)*cos(theta4)*cos(theta5)*sin(theta3)))/125 + (51*sin(theta6)*(cos(theta2)*cos(theta3)*sin(theta5) + cos(theta2)*cos(theta4)*cos(theta5)*sin(theta3)))/125 - (48*cos(theta2)*sin(theta3)*sin(theta4))/125 - (33*cos(theta2)*cos(theta4)*sin(theta3))/400 + (51*cos(theta2)*cos(theta6)*sin(theta3)*sin(theta4))/125 - (11*cos(theta2)*sin(theta3)*sin(theta4)*sin(theta6))/125,                                                                                                                                                                                                                                                                                                                                                                                (33*cos(theta3)*sin(theta2))/400 - (11*cos(theta6)*(sin(theta2)*sin(theta3)*sin(theta5) - cos(theta3)*cos(theta4)*cos(theta5)*sin(theta2)))/125 - (51*sin(theta6)*(sin(theta2)*sin(theta3)*sin(theta5) - cos(theta3)*cos(theta4)*cos(theta5)*sin(theta2)))/125 - (48*cos(theta3)*sin(theta2)*sin(theta4))/125 - (33*cos(theta3)*cos(theta4)*sin(theta2))/400 + (51*cos(theta3)*cos(theta6)*sin(theta2)*sin(theta4))/125 - (11*cos(theta3)*sin(theta2)*sin(theta4)*sin(theta6))/125,                                                                                                                                                                                                                                                 (33*sin(theta2)*sin(theta3)*sin(theta4))/400 - (48*cos(theta4)*sin(theta2)*sin(theta3))/125 + (51*cos(theta4)*cos(theta6)*sin(theta2)*sin(theta3))/125 - (11*cos(theta4)*sin(theta2)*sin(theta3)*sin(theta6))/125 - (11*cos(theta5)*cos(theta6)*sin(theta2)*sin(theta3)*sin(theta4))/125 - (51*cos(theta5)*sin(theta2)*sin(theta3)*sin(theta4)*sin(theta6))/125,                                                                                                                                                                   (11*cos(theta6)*(cos(theta3)*cos(theta5)*sin(theta2) - cos(theta4)*sin(theta2)*sin(theta3)*sin(theta5)))/125 + (51*sin(theta6)*(cos(theta3)*cos(theta5)*sin(theta2) - cos(theta4)*sin(theta2)*sin(theta3)*sin(theta5)))/125,                                                                                                                                                                                                                                                 (51*cos(theta6)*(cos(theta3)*sin(theta2)*sin(theta5) + cos(theta4)*cos(theta5)*sin(theta2)*sin(theta3)))/125 - (11*sin(theta6)*(cos(theta3)*sin(theta2)*sin(theta5) + cos(theta4)*cos(theta5)*sin(theta2)*sin(theta3)))/125 - (11*cos(theta6)*sin(theta2)*sin(theta3)*sin(theta4))/125 - (51*sin(theta2)*sin(theta3)*sin(theta4)*sin(theta6))/125, 0]
        ], np.float32)
    
    Jtheta4 = np.array([
        [(11*sin(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)))/125 - (51*cos(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)))/125 + (48*cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)))/125 - (33*sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)))/400 + (33*cos(theta4)*sin(theta1)*sin(theta2))/400 + (48*sin(theta1)*sin(theta2)*sin(theta4))/125 + (11*cos(theta5)*cos(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125 + (51*cos(theta5)*sin(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125, (51*cos(theta6)*(cos(theta1)*cos(theta2)*sin(theta4) - cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)))/125 - (11*sin(theta6)*(cos(theta1)*cos(theta2)*sin(theta4) - cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)))/125 + (11*cos(theta5)*cos(theta6)*(cos(theta1)*cos(theta2)*cos(theta4) + cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4)))/125 + (51*cos(theta5)*sin(theta6)*(cos(theta1)*cos(theta2)*cos(theta4) + cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4)))/125 - (33*cos(theta1)*cos(theta2)*cos(theta4))/400 - (48*cos(theta1)*cos(theta2)*sin(theta4))/125 + (48*cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2))/125 - (33*cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4))/400, (48*cos(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/125 - (33*sin(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/400 - (51*cos(theta4)*cos(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/125 + (11*cos(theta4)*sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/125 + (11*cos(theta5)*cos(theta6)*sin(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/125 + (51*cos(theta5)*sin(theta4)*sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/125, (51*cos(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125 - (11*sin(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125 - (33*cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)))/400 - (48*sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)))/125 + (33*cos(theta1)*sin(theta2)*sin(theta4))/400 + (11*cos(theta5)*cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)))/125 + (51*cos(theta5)*sin(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)))/125 - (48*cos(theta1)*cos(theta4)*sin(theta2))/125, - (11*cos(theta6)*sin(theta5)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125 - (51*sin(theta5)*sin(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125, (11*cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)))/125 + (51*sin(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)))/125 + (51*cos(theta5)*cos(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125 - (11*cos(theta5)*sin(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125, 0],
        [(11*sin(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)))/125 - (51*cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)))/125 + (48*cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)))/125 - (33*sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)))/400 - (48*cos(theta1)*sin(theta2)*sin(theta4))/125 + (11*cos(theta5)*cos(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125 + (51*cos(theta5)*sin(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125 - (33*cos(theta1)*cos(theta4)*sin(theta2))/400, (51*cos(theta6)*(cos(theta2)*sin(theta1)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2)))/125 - (11*sin(theta6)*(cos(theta2)*sin(theta1)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2)))/125 - (48*cos(theta2)*sin(theta1)*sin(theta4))/125 + (11*cos(theta5)*cos(theta6)*(cos(theta2)*cos(theta4)*sin(theta1) + cos(theta3)*sin(theta1)*sin(theta2)*sin(theta4)))/125 + (51*cos(theta5)*sin(theta6)*(cos(theta2)*cos(theta4)*sin(theta1) + cos(theta3)*sin(theta1)*sin(theta2)*sin(theta4)))/125 - (33*cos(theta2)*cos(theta4)*sin(theta1))/400 + (48*cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2))/125 - (33*cos(theta3)*sin(theta1)*sin(theta2)*sin(theta4))/400, (33*sin(theta4)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/400 - (48*cos(theta4)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/125 + (51*cos(theta4)*cos(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/125 - (11*cos(theta4)*sin(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/125 - (11*cos(theta5)*cos(theta6)*sin(theta4)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/125 - (51*cos(theta5)*sin(theta4)*sin(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/125, (11*sin(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125 - (51*cos(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125 + (33*cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)))/400 + (48*sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)))/125 - (48*cos(theta4)*sin(theta1)*sin(theta2))/125 + (33*sin(theta1)*sin(theta2)*sin(theta4))/400 - (11*cos(theta5)*cos(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)))/125 - (51*cos(theta5)*sin(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)))/125,   (11*cos(theta6)*sin(theta5)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125 + (51*sin(theta5)*sin(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125, (11*cos(theta5)*sin(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125 - (51*sin(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)))/125 - (51*cos(theta5)*cos(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125 - (11*cos(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)))/125, 0],
        [0,                                                                                                                                                 (33*cos(theta4)*sin(theta2))/400 + (48*sin(theta2)*sin(theta4))/125 - (51*cos(theta6)*(sin(theta2)*sin(theta4) + cos(theta2)*cos(theta3)*cos(theta4)))/125 + (11*sin(theta6)*(sin(theta2)*sin(theta4) + cos(theta2)*cos(theta3)*cos(theta4)))/125 - (11*cos(theta5)*cos(theta6)*(cos(theta4)*sin(theta2) - cos(theta2)*cos(theta3)*sin(theta4)))/125 - (51*cos(theta5)*sin(theta6)*(cos(theta4)*sin(theta2) - cos(theta2)*cos(theta3)*sin(theta4)))/125 + (48*cos(theta2)*cos(theta3)*cos(theta4))/125 - (33*cos(theta2)*cos(theta3)*sin(theta4))/400,                                                                                                                                                                                                                                                 (33*sin(theta2)*sin(theta3)*sin(theta4))/400 - (48*cos(theta4)*sin(theta2)*sin(theta3))/125 + (51*cos(theta4)*cos(theta6)*sin(theta2)*sin(theta3))/125 - (11*cos(theta4)*sin(theta2)*sin(theta3)*sin(theta6))/125 - (11*cos(theta5)*cos(theta6)*sin(theta2)*sin(theta3)*sin(theta4))/125 - (51*cos(theta5)*sin(theta2)*sin(theta3)*sin(theta4)*sin(theta6))/125,                                                                                                                                                                                                                                                                                                                         (33*cos(theta2)*sin(theta4))/400 - (48*cos(theta2)*cos(theta4))/125 + (51*cos(theta6)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4)))/125 - (11*sin(theta6)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4)))/125 - (48*cos(theta3)*sin(theta2)*sin(theta4))/125 - (11*cos(theta5)*cos(theta6)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)))/125 - (51*cos(theta5)*sin(theta6)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)))/125 - (33*cos(theta3)*cos(theta4)*sin(theta2))/400,                                                                                                         - (11*cos(theta6)*sin(theta5)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4)))/125 - (51*sin(theta5)*sin(theta6)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4)))/125,                                                                                                                                                                                                                 (51*cos(theta5)*cos(theta6)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4)))/125 - (51*sin(theta6)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)))/125 - (11*cos(theta6)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)))/125 - (11*cos(theta5)*sin(theta6)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4)))/125, 0]
        ], np.float32)
    
    Jtheta5 = np.array([
        [(11*cos(theta6)*(sin(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125 + (51*sin(theta6)*(sin(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125, - (11*cos(theta6)*(sin(theta5)*(cos(theta1)*cos(theta2)*sin(theta4) - cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta1)*cos(theta5)*sin(theta2)*sin(theta3)))/125 - (51*sin(theta6)*(sin(theta5)*(cos(theta1)*cos(theta2)*sin(theta4) - cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta1)*cos(theta5)*sin(theta2)*sin(theta3)))/125,   (11*cos(theta6)*(cos(theta5)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta4)*sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125 + (51*sin(theta6)*(cos(theta5)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta4)*sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125, - (11*cos(theta6)*sin(theta5)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125 - (51*sin(theta5)*sin(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125,   (11*cos(theta6)*(cos(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125 + (51*sin(theta6)*(cos(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125, (51*cos(theta6)*(sin(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125 - (11*sin(theta6)*(sin(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125, 0],
        [(11*cos(theta6)*(sin(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125 + (51*sin(theta6)*(sin(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125, - (11*cos(theta6)*(sin(theta5)*(cos(theta2)*sin(theta1)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2)) - cos(theta5)*sin(theta1)*sin(theta2)*sin(theta3)))/125 - (51*sin(theta6)*(sin(theta5)*(cos(theta2)*sin(theta1)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2)) - cos(theta5)*sin(theta1)*sin(theta2)*sin(theta3)))/125, - (11*cos(theta6)*(cos(theta5)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + cos(theta4)*sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125 - (51*sin(theta6)*(cos(theta5)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + cos(theta4)*sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125,   (11*cos(theta6)*sin(theta5)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125 + (51*sin(theta5)*sin(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125, - (11*cos(theta6)*(cos(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125 - (51*sin(theta6)*(cos(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125, (11*sin(theta6)*(sin(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125 - (51*cos(theta6)*(sin(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125, 0],
        [0,                                                                           (11*cos(theta6)*(sin(theta5)*(sin(theta2)*sin(theta4) + cos(theta2)*cos(theta3)*cos(theta4)) + cos(theta2)*cos(theta5)*sin(theta3)))/125 + (51*sin(theta6)*(sin(theta5)*(sin(theta2)*sin(theta4) + cos(theta2)*cos(theta3)*cos(theta4)) + cos(theta2)*cos(theta5)*sin(theta3)))/125,                                                                                                                                                                   (11*cos(theta6)*(cos(theta3)*cos(theta5)*sin(theta2) - cos(theta4)*sin(theta2)*sin(theta3)*sin(theta5)))/125 + (51*sin(theta6)*(cos(theta3)*cos(theta5)*sin(theta2) - cos(theta4)*sin(theta2)*sin(theta3)*sin(theta5)))/125,                                                                                                         - (11*cos(theta6)*sin(theta5)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4)))/125 - (51*sin(theta5)*sin(theta6)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4)))/125,                                                                                                                                                                                         - (11*cos(theta6)*(cos(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) + sin(theta2)*sin(theta3)*sin(theta5)))/125 - (51*sin(theta6)*(cos(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) + sin(theta2)*sin(theta3)*sin(theta5)))/125,                                                                                                                                                                                         (11*sin(theta6)*(sin(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta5)*sin(theta2)*sin(theta3)))/125 - (51*cos(theta6)*(sin(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta5)*sin(theta2)*sin(theta3)))/125, 0]
        ], np.float32)
    
    Jtheta6 = np.array([
        [(11*cos(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125 + (51*sin(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125 - (51*cos(theta6)*(cos(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125 + (11*sin(theta6)*(cos(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125, (11*cos(theta6)*(cos(theta1)*cos(theta2)*cos(theta4) + cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4)))/125 + (51*sin(theta6)*(cos(theta1)*cos(theta2)*cos(theta4) + cos(theta1)*cos(theta3)*sin(theta2)*sin(theta4)))/125 + (51*cos(theta6)*(cos(theta5)*(cos(theta1)*cos(theta2)*sin(theta4) - cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) + cos(theta1)*sin(theta2)*sin(theta3)*sin(theta5)))/125 - (11*sin(theta6)*(cos(theta5)*(cos(theta1)*cos(theta2)*sin(theta4) - cos(theta1)*cos(theta3)*cos(theta4)*sin(theta2)) + cos(theta1)*sin(theta2)*sin(theta3)*sin(theta5)))/125, (51*cos(theta6)*(sin(theta5)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta4)*cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125 - (11*sin(theta6)*(sin(theta5)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta4)*cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125 + (11*cos(theta6)*sin(theta4)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/125 + (51*sin(theta4)*sin(theta6)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3)))/125, (11*cos(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)))/125 + (51*sin(theta6)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)))/125 + (51*cos(theta5)*cos(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125 - (11*cos(theta5)*sin(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125, (51*cos(theta6)*(sin(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125 - (11*sin(theta6)*(sin(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125, (51*cos(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125 - (11*sin(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125 + (11*cos(theta6)*(cos(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125 + (51*sin(theta6)*(cos(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125, 0],
        [(11*cos(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125 + (51*sin(theta6)*(sin(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) + cos(theta1)*cos(theta4)*sin(theta2)))/125 - (51*cos(theta6)*(cos(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125 + (11*sin(theta6)*(cos(theta5)*(cos(theta4)*(sin(theta1)*sin(theta3) - cos(theta1)*cos(theta2)*cos(theta3)) - cos(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta3)*sin(theta1) + cos(theta1)*cos(theta2)*sin(theta3))))/125, (51*cos(theta6)*(cos(theta5)*(cos(theta2)*sin(theta1)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2)) + sin(theta1)*sin(theta2)*sin(theta3)*sin(theta5)))/125 - (11*sin(theta6)*(cos(theta5)*(cos(theta2)*sin(theta1)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta1)*sin(theta2)) + sin(theta1)*sin(theta2)*sin(theta3)*sin(theta5)))/125 + (11*cos(theta6)*(cos(theta2)*cos(theta4)*sin(theta1) + cos(theta3)*sin(theta1)*sin(theta2)*sin(theta4)))/125 + (51*sin(theta6)*(cos(theta2)*cos(theta4)*sin(theta1) + cos(theta3)*sin(theta1)*sin(theta2)*sin(theta4)))/125, (11*sin(theta6)*(sin(theta5)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125 - (51*cos(theta6)*(sin(theta5)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125 - (11*cos(theta6)*sin(theta4)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/125 - (51*sin(theta4)*sin(theta6)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3)))/125, (11*cos(theta5)*sin(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125 - (51*sin(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)))/125 - (51*cos(theta5)*cos(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125 - (11*cos(theta6)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)))/125, (11*sin(theta6)*(sin(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125 - (51*cos(theta6)*(sin(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) - cos(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125, (11*sin(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125 - (51*cos(theta6)*(sin(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) - cos(theta4)*sin(theta1)*sin(theta2)))/125 - (11*cos(theta6)*(cos(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125 - (51*sin(theta6)*(cos(theta5)*(cos(theta4)*(cos(theta1)*sin(theta3) + cos(theta2)*cos(theta3)*sin(theta1)) + sin(theta1)*sin(theta2)*sin(theta4)) + sin(theta5)*(cos(theta1)*cos(theta3) - cos(theta2)*sin(theta1)*sin(theta3))))/125, 0],
        [0,                                                                                                                         (11*sin(theta6)*(cos(theta5)*(sin(theta2)*sin(theta4) + cos(theta2)*cos(theta3)*cos(theta4)) - cos(theta2)*sin(theta3)*sin(theta5)))/125 - (51*cos(theta6)*(cos(theta5)*(sin(theta2)*sin(theta4) + cos(theta2)*cos(theta3)*cos(theta4)) - cos(theta2)*sin(theta3)*sin(theta5)))/125 - (11*cos(theta6)*(cos(theta4)*sin(theta2) - cos(theta2)*cos(theta3)*sin(theta4)))/125 - (51*sin(theta6)*(cos(theta4)*sin(theta2) - cos(theta2)*cos(theta3)*sin(theta4)))/125,                                                                                                                                                                                                                                                 (51*cos(theta6)*(cos(theta3)*sin(theta2)*sin(theta5) + cos(theta4)*cos(theta5)*sin(theta2)*sin(theta3)))/125 - (11*sin(theta6)*(cos(theta3)*sin(theta2)*sin(theta5) + cos(theta4)*cos(theta5)*sin(theta2)*sin(theta3)))/125 - (11*cos(theta6)*sin(theta2)*sin(theta3)*sin(theta4))/125 - (51*sin(theta2)*sin(theta3)*sin(theta4)*sin(theta6))/125,                                                                                                                                                                                                                 (51*cos(theta5)*cos(theta6)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4)))/125 - (51*sin(theta6)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)))/125 - (11*cos(theta6)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)))/125 - (11*cos(theta5)*sin(theta6)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4)))/125,                                                                                                                                                                                         (11*sin(theta6)*(sin(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta5)*sin(theta2)*sin(theta3)))/125 - (51*cos(theta6)*(sin(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) - cos(theta5)*sin(theta2)*sin(theta3)))/125,                                                                                                                                                                                                                                                                                                 (51*cos(theta6)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4)))/125 - (51*sin(theta6)*(cos(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) + sin(theta2)*sin(theta3)*sin(theta5)))/125 - (11*cos(theta6)*(cos(theta5)*(cos(theta2)*sin(theta4) - cos(theta3)*cos(theta4)*sin(theta2)) + sin(theta2)*sin(theta3)*sin(theta5)))/125 - (11*sin(theta6)*(cos(theta2)*cos(theta4) + cos(theta3)*sin(theta2)*sin(theta4)))/125, 0]
        ], np.float32)
    
    Jtheta7 = np.array([
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0]
        ], np.float32)
    
    mul = P.Mul()
    
    dJa = mul(Jtheta1, Tensor([dtheta1 for i in range(1, 8)])) + mul(Jtheta2, Tensor([dtheta2 for i in range(1, 8)])) + mul(Jtheta3, Tensor([dtheta3 for i in range(1, 8)])) + mul(Jtheta4, Tensor([dtheta4 for i in range(1, 8)])) + mul(Jtheta5, Tensor([dtheta5 for i in range(1, 8)])) + mul(Jtheta6, Tensor([dtheta6 for i in range(1, 8)])) + mul(Jtheta7, Tensor([dtheta7 for i in range(1, 8)]))
    
    return dJa